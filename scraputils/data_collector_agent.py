# S50 = ['ABB', 'ABBOTINDIA', 'ABSLAMC', 'AKZOINDIA', 'BEL', 'BLUESTARCO', 'BOSCHLTD', 'CAMS', 'CAPLIPOINT', 'CARBORUNIV', 'CASTROLIND', 'CIPLA', 'COLPAL', 'CONCORDBIO', 'CRISIL', 'CUMMINSIND', 'EICHERMOT', 'ESABINDIA', 'GAIL', 'GANESHHOUC', 'GILLETTE', 'GRSE', 'HAL', 'HAVELLS', 'HBLENGINE', 'HCLTECH', 'HDFCAMC', 'HEROMOTOCO', 'ICICIGI', 'INGERRAND', 'ITC', 'JBCHEPHARM', 'JLHL', 'KEI', 'KFINTECH', 'KIRLOSBROS', 'KPRMILL', 'KSB', 'MANKIND', 'MARKSANS', 'MAZDOCK', 'MINDACORP', 'NAM-INDIA', 'NATCOPHARM', 'NATIONALUM', 'NAVA', 'OBEROIRLTY', 'OFSS', 'PETRONET', 'PIIND', 'POLYCAB', 'POLYMED', 'RAILTEL', 'SANOFI', 'SARDAEN', 'SHAKTIPUMP', 'SUMICHEM', 'SUZLON', 'TORNTPHARM', 'VIJAYA', 'ZYDUSLIFE']
# # 'AIIL',
# S50next = ['ACE', 'AFFLE', 'AGI', 'APARINDS', 'ASKAUTOLTD', 'AVANTIFEED', 'BANCOINDIA', 'BLS', 'CARERATING', 'CLSEL', 'CMSINFO', 'DHANUKA', 'DLINKINDIA', 'DODLA', 'ECLERX', 'EIHAHOTLS', 'FOSECOIND', 'GABRIEL', 'GARFIBRES', 'GODFRYPHLP', 'GRAUWEIL', 'GULFOILLUB', 'ICRA', 'IIFLCAPS', 'IMFA', 'INDRAMEDCO', 'IONEXCHANG', 'JWL', 'KINGFA', 'KIRLPNU', 'KNRCON', 'KOVAI', 'KSL', 'NESCO', 'PIXTRANS', 'PLATIND', 'POCL', 'POWERMECH', 'PRECWIRE', 'PRICOLLTD', 'SJS', 'STYLAMIND', 'TCI', 'TI', 'TIIL', 'TIPSMUSIC', 'TRITURBINE', 'UDS', 'UTIAMC', 'VENUSPIPES', 'VESUVIUS', 'VIMTALABS', 'VSTTILLERS', 'WENDT', 'YATHARTH']
# # , 'AVANTEL'
# S200 = ['ABB', 'ABBOTINDIA', 'ABSLAMC', 'ACE', 'AIIL', 'AKZOINDIA', 'ALKYLAMINE', 'ANUP', 'APARINDS', 'APLLTD', 'ARE&M', 'ASKAUTOLTD', 'ATGL', 'AVANTIFEED', 'BALUFORGE', 'BANCOINDIA', 'BECTORFOOD', 'BEL', 'BIKAJI', 'BLS', 'BLUEJET', 'BLUESTARCO', 'BOSCHLTD', 'CAMPUS', 'CAMS', 'CARBORUNIV', 'CARERATING', 'CASTROLIND', 'CDSL', 'CELLO', 'CERA', 'CIPLA', 'CMSINFO', 'COCHINSHIP', 'COFORGE', 'COLPAL', 'CONCORDBIO', 'CRISIL', 'CROMPTON', 'CUMMINSIND', 'DHANUKA', 'DIVISLAB', 'DIXON', 'DLINKINDIA', 'DMART', 'DODLA', 'DOLATALGO', 'DOMS', 'ECLERX', 'EICHERMOT', 'EIHAHOTELS', 'EIHOTEL', 'ENDURANCE', 'EPL', 'ESABINDIA', 'EXPLEOSOL', 'FCL', 'FDC', 'FIEMIND', 'FINEORG', 'FMGOETZE', 'FORCEMOT', 'GABRIEL', 'GAIL', 'GANESHHOUC', 'GARFIBRES', 'GILLETTE', 'GLAXO', 'GODFRYPHLP', 'GOPAL', 'GRAUWEIL', 'GRSE', 'GULFOILLUB', 'GVT&D', 'HAL', 'HAPPYFORGE', 'HAVELLS', 'HCLTECH', 'HDFCAMC', 'HERITGFOOD', 'HEROMOTOCO', 'HINDCOPPER', 'HSCL', 'ICICIGI', 'ICRA', 'IIFLCAPS', 'INDHOTEL', 'INDIAMART', 'INDRAMEDCO', 'INFY', 'INGERRAND', 'INNOVACAP', 'INOXINDIA', 'INTERARCH', 'IRCTC', 'ITC', 'JBCHEPHARM', 'JINDALPHOT', 'JLHL', 'JWL', 'JYOTHYLAB', 'KEI', 'KENNAMET', 'KFINTECH', 'KINGFA', 'KIRLOSBROS', 'KIRLPNU', 'KNRCON', 'KOVAI', 'KPITTECH', 'KSB', 'KSL', 'LALPATHLAB', 'LGBBROSLTD', 'LUPIN', 'MANKIND', 'MASTERTR', 'MAYURUNIQ', 'MAZDOCK', 'MEDANTA', 'MINDACORP', 'MPSLTD', 'NAM-INDIA', 'NATCOPHARM', 'NATIONALUM', 'NAVNETEDUL', 'NESCO', 'NEWGEN', 'NIITMTS', 'NMDC', 'NRBBEARING', 'OBEROIRLTY', 'OFSS', 'PAGEIND', 'PARACABLES', 'PDMJEPAPER', 'PERSISTENT', 'PETRONET', 'PFIZER', 'PGEL', 'PGHL', 'PIDILITIND', 'PIIND', 'PIXTRANS', 'PNGJL', 'POLYCAB', 'POLYMED', 'POWERINDIA', 'POWERMECH', 'PRECWIRE', 'PRICOLLTD', 'PRUDENT', 'RAILTEL', 'RATEGAIN', 'ROSSARI', 'SAKSOFT', 'SANOFI', 'SARDAEN', 'SCHAEFFLER', 'SEAMECLTD', 'SHAKTIPUMP', 'SHANTIGEAR', 'SHRIPISTON', 'SKFINDIA', 'SONACOMS', 'SPLPETRO', 'STYLAMIND', 'SUMICHEM', 'SUNDRMFAST', 'SUPRIYA', 'SUVENPHAR', 'SWARAJENG', 'SYMPHONY', 'TAJGVK', 'TALBROAUTO', 'TBOTEK', 'TDPOWERSYS', 'THERMAX', 'THOMASCOOK', 'TI', 'TIIL', 'TIMETECHNO', 'TIPSMUSIC', 'TORNTPHARM', 'TRENT', 'TRITURBINE', 'UDS', 'UNOMINDA', 'UTIAMC', 'VENUSPIPES', 'VESUVIUS', 'VGUARD', 'VIJAYA', 'VOLTAMP', 'VSSL', 'VSTTILLERS', 'WAAREEENER', 'YATHARTH', 'ZENTEC', 'ZYDUSLIFE']


# import os
# from datetime import date
# from jugaad_data.nse import stock_df

# # Define the stock symbol and date range

# tot_list = S200+S50+S50next

# start_date = date(2022, 1, 1)
# end_date = date(2023, 12, 31)

# failedone = []
# for i in tot_list:
#     try:
#         if not os.path.isfile("Data Cache//%s.csv"%i):
#             print("creating ",i)
#             # Fetch the historical data
#             df = stock_df(symbol=i, from_date=start_date, to_date=end_date, series="EQ")
#             print(i)
#             # Display the data
#             df.to_csv("Data Cache//%s.csv"%i)
#     except:
#         failedone.append(i)
#         continue
# print(failedone)

# #Failed to create ['AIIL', 'BALUFORGE', 'GOPAL', 'INTERARCH', 'MASTERTR', 'PNGJL', 'TBOTEK', 'WAAREEENER'] and ['EIHAHOTLS', 'PLATIND']